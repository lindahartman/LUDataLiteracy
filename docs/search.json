[
  {
    "objectID": "Utrecht.html",
    "href": "Utrecht.html",
    "title": "Utrecht Housing",
    "section": "",
    "text": "The dataset contains the following columns\n\n\n\n\n\n\n\n\nvariable\ndescription\n\n\n\n\nid\nUnique ID\n\n\nzip_code4\nZip Code 4 digits\n\n\nzip_code6\nZip Code 6 symbols\n\n\nzip_code6_id\nZip Code 6 symbols ID\n\n\nhouse_type\nHouse Type: Apartment or House\n\n\nlot_area\nLot Aream, sqm\n\n\nhouse_area\nHouse Area, sqm\n\n\ngarden_size\nGarden Size, sqm\n\n\nrooms\nNumber of Rooms\n\n\nbathrooms\nNumber of Bathrooms\n\n\nx_coor\nX Coordinate\n\n\ny_coor\nY Coordinate\n\n\nbuild_year\nBuild Year\n\n\nretail_value\nRetail Value, kâ‚¬\n\n\nasking_price\nAsking Price, kâ‚¬\n\n\nenergy_label\nEnergy Label\n\n\nenergy_eff\nEnergy Efficiency\n\n\nvaluation_date\nValuation Date\n\n\nstreet\nStreet Name\n\n\nsubdistrict\nSubdistrict Name\n\n\ndistrict\nDistrict Name\n\n\ncity\nCity\n\n\ndist_from_train\nDistance from train, km"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "LUDataLiteracy",
    "section": "",
    "text": "This is a Quarto website.\nTo learn more about Quarto websites visit https://quarto.org/docs/websites.\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "6_Quarto.html",
    "href": "6_Quarto.html",
    "title": "Practical 5: Producing reports with Quarto",
    "section": "",
    "text": "This is the tutorial for the first practical on Data Visualization with Plotnine\n\n1 + 1\n\n2\n\n\n\n\nCode\nimport polars as pl\nfrom plotnine import *\nfrom gapminder import gapminder\n\n\nC:\\Projects\\Teaching\\LUDataLiteracy\\.venv\\Lib\\site-packages\\gapminder\\data.py:1: UserWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html. The pkg_resources package is slated for removal as early as 2025-11-30. Refrain from using this package or pin to Setuptools&lt;81.\n\n\n\n#gapminder\n\n\n(\nggplot(gapminder)+\ngeom_point(mapping=aes(x='gdpPercap', y='lifeExp', color='continent'))\n)"
  },
  {
    "objectID": "4_Wrangling_joins.html",
    "href": "4_Wrangling_joins.html",
    "title": "Practical 4: Data Wrangling + joins",
    "section": "",
    "text": "This is the tutorial for the first practical on Data Visualization with Plotnine\n\n1 + 1\n\n2\n\n\n\n\nCode\nimport polars as pl\nfrom plotnine import *\nfrom gapminder import gapminder\n\n\nC:\\Projects\\Teaching\\LUDataLiteracy\\.venv\\Lib\\site-packages\\gapminder\\data.py:1: UserWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html. The pkg_resources package is slated for removal as early as 2025-11-30. Refrain from using this package or pin to Setuptools&lt;81.\n\n\n\n#gapminder\n\n\n(\nggplot(gapminder)+\ngeom_point(mapping=aes(x='gdpPercap', y='lifeExp', color='continent'))\n)"
  },
  {
    "objectID": "2_DataViz_wrangling.html",
    "href": "2_DataViz_wrangling.html",
    "title": "Practical 2: Data Visualization + Wrangling",
    "section": "",
    "text": "The objective of the tutorial is to give student a chance to practice the data visualization and data wrangling applying the skills learned through the video lessons on a new dataset."
  },
  {
    "objectID": "2_DataViz_wrangling.html#preparation",
    "href": "2_DataViz_wrangling.html#preparation",
    "title": "Practical 2: Data Visualization + Wrangling",
    "section": "Preparation",
    "text": "Preparation\n\n\n\n\n\n\nNote\n\n\n\nBefore you begin your peer-programming session, please, start the new Jupyter notebook environment in your terminal using the command you learned in Module 1 of the course.\nuv run jupyter lab\nCreate a new notebook and add a text cell atop your document for this practical session. Add a header # Data Visualization and wrangling. Then add a code cell and place the following code there.\n\nimport polars as pl\nimport polars.selectors as cs\nfrom plotnine import *\n\nThen import the datasets for this practical. Add another code cell below (using the key â€˜Bâ€™) and paste the following code. This will import two datasets we will be using in the session: Utrecht and Kingâ€™s County.\n\nut = pl.read_csv(\"https://rrr.is/data24utrecht\", try_parse_dates=True)\nkc = pl.read_csv('https://rrr.is/data24kingscounty', try_parse_dates=True)\nkc = pl.read_csv('data/kc_house_data.csv', try_parse_dates=True)"
  },
  {
    "objectID": "2_DataViz_wrangling.html#challenge-1",
    "href": "2_DataViz_wrangling.html#challenge-1",
    "title": "Practical 2: Data Visualization + Wrangling",
    "section": "Challenge 1",
    "text": "Challenge 1\n\n\n\n\n\n\nChallenge\n\n\n\nWhat is the average garden size for the houses in the Utrecht dataset? What is the median distance from the train station?"
  },
  {
    "objectID": "2_DataViz_wrangling.html#challenge-2",
    "href": "2_DataViz_wrangling.html#challenge-2",
    "title": "Practical 2: Data Visualization + Wrangling",
    "section": "Challenge 2",
    "text": "Challenge 2\n\n\n\n\n\n\nChallenge\n\n\n\nPlot house area against lot area for the woonhuis properties and add a linear trend line. Which points stand out as outliers from the overall pattern? Roughly what lot area would you expect for a 200 sqm house based on this line?\nðŸ’¡ You can pass the data to plotnine using the .pipe() method."
  },
  {
    "objectID": "2_DataViz_wrangling.html#challenge-3",
    "href": "2_DataViz_wrangling.html#challenge-3",
    "title": "Practical 2: Data Visualization + Wrangling",
    "section": "Challenge 3",
    "text": "Challenge 3\n\n\n\n\n\n\nChallenge\n\n\n\nDo the outliers you identified in the previous plot also stand out in the relationship between house area and asking price? Do these outliers correspond to newer or older houses? Are they located close to one another? What are their 4-digit zip codes?"
  },
  {
    "objectID": "2_DataViz_wrangling.html#challenge-4",
    "href": "2_DataViz_wrangling.html#challenge-4",
    "title": "Practical 2: Data Visualization + Wrangling",
    "section": "Challenge 4",
    "text": "Challenge 4\n\n\n\n\n\n\nChallenge\n\n\n\nCreate a small dataset that includes only houses from the zip codes identified in the previous challenge. Show the street name, house size, lot area, build year, energy class, and asking price. How many houses are in your dataset? Arrange the observations by the year the houses were built. On which street is the oldest of these houses located?"
  },
  {
    "objectID": "2_DataViz_wrangling.html#challenge-5",
    "href": "2_DataViz_wrangling.html#challenge-5",
    "title": "Practical 2: Data Visualization + Wrangling",
    "section": "Challenge 5",
    "text": "Challenge 5\n\n\n\n\n\n\nChallenge\n\n\n\nWhich 4-digit zip code includes the largest number of streets?\nWithin that zip code, what is the street name of the house closest to the train station?\nðŸ’¡ You can count unique values using n_unique() and find the minimum value with min()"
  },
  {
    "objectID": "2_DataViz_wrangling.html#challenge-6",
    "href": "2_DataViz_wrangling.html#challenge-6",
    "title": "Practical 2: Data Visualization + Wrangling",
    "section": "Challenge 6",
    "text": "Challenge 6\n\n\n\n\n\n\nChallenge\n\n\n\nPlot a line showing the average house size per decade in the 20th century. How many peaks in the house sizes can you identify?\nðŸ’¡ The whole-number division in Python is written as //"
  },
  {
    "objectID": "2_DataViz_wrangling.html#challenge-7",
    "href": "2_DataViz_wrangling.html#challenge-7",
    "title": "Practical 2: Data Visualization + Wrangling",
    "section": "Challenge 7",
    "text": "Challenge 7\n\n\n\n\n\n\nChallenge\n\n\n\nCalculate the average square meter price per valuation week based on the retail value and plot it. Do you see any trend in real estate prices over time?\nðŸ’¡ Measure per square meter price as retail value divided by house area\nðŸ’¡ You can extract the ISO week number from the date using the .dt.week() method"
  },
  {
    "objectID": "2_DataViz_wrangling.html#challenge-8",
    "href": "2_DataViz_wrangling.html#challenge-8",
    "title": "Practical 2: Data Visualization + Wrangling",
    "section": "Challenge 8",
    "text": "Challenge 8\n\n\n\n\n\n\nChallenge\n\n\n\nWhich street has the highest number of energy-efficient houses? What proportion of houses on that street are energy efficient? When was the oldest of these houses built?\nðŸ’¡ You can calculate the proportion using .over() clause"
  },
  {
    "objectID": "2_DataViz_wrangling.html#challenge-9",
    "href": "2_DataViz_wrangling.html#challenge-9",
    "title": "Practical 2: Data Visualization + Wrangling",
    "section": "Challenge 9",
    "text": "Challenge 9\n\n\n\n\n\n\nChallenge\n\n\n\nDefine the asking price premium as the percentage difference between the asking price and the retail value. Which house has the highest asking price premium in the dataset? Compare this house to the others on the same street â€” is it also the most expensive on a per-square-meter basis?\nPlot the distribution of asking price per square meter. What do the top three most expensive properties in Utrecht (per square meter) have in common?\nðŸ’¡ You can see the house on Google Street View if you search Google Maps using x_coor, y_coor."
  },
  {
    "objectID": "2_DataViz_wrangling.html#challenge-10",
    "href": "2_DataViz_wrangling.html#challenge-10",
    "title": "Practical 2: Data Visualization + Wrangling",
    "section": "Challenge 10",
    "text": "Challenge 10\n\n\n\n\n\n\nChallenge\n\n\n\nPlot the number of houses sold in each district.\nðŸ’¡ Use a bar chart to visualize the counts and flip the coordinates to make the labels easier to read. Research the difference between a bar chart and a column plot in Plotnine. Investigate how to use the reorder() function in Plotnine and see if you can improve your plot with it."
  },
  {
    "objectID": "2_DataViz_wrangling.html#challenge-11",
    "href": "2_DataViz_wrangling.html#challenge-11",
    "title": "Practical 2: Data Visualization + Wrangling",
    "section": "Challenge 11",
    "text": "Challenge 11\n\n\n\n\n\n\nChallenge\n\n\n\nHow many houses changed owners more than once? What is the maximum number of times a house was sold? Where is this house located? How much profit was made by flipping it?"
  },
  {
    "objectID": "2_DataViz_wrangling.html#challenge-12",
    "href": "2_DataViz_wrangling.html#challenge-12",
    "title": "Practical 2: Data Visualization + Wrangling",
    "section": "Challenge 12",
    "text": "Challenge 12\n\n\n\n\n\n\nChallenge\n\n\n\nPlot the average monthly house prices. Do you see signs of house-price inflation? Does your conclusion hold for every district?\nðŸ’¡ ou can round dates to the start of each month using dt.month_start()."
  },
  {
    "objectID": "1_DataViz.html",
    "href": "1_DataViz.html",
    "title": "Practical 1: Data Visualization",
    "section": "",
    "text": "This is the tutorial for the first practical on Data Visualization with Plotnine\nThe objective of the tutorial is to give students a chance to practice data visualization by applying the skills learned through the video lessons, on a new dataset."
  },
  {
    "objectID": "1_DataViz.html#challenge-1",
    "href": "1_DataViz.html#challenge-1",
    "title": "Practical 1: Data Visualization",
    "section": "Challenge 1",
    "text": "Challenge 1\n\n\n\n\n\n\nChallenge\n\n\n\nReproduce this plot."
  },
  {
    "objectID": "1_DataViz.html#challenge-2",
    "href": "1_DataViz.html#challenge-2",
    "title": "Practical 1: Data Visualization",
    "section": "Challenge 2",
    "text": "Challenge 2\n\n\n\n\n\n\nChallenge\n\n\n\nPlot the (asked) price of the house against the number of rooms. Use color to indicate number of bathrooms in each house."
  },
  {
    "objectID": "1_DataViz.html#challenge-3",
    "href": "1_DataViz.html#challenge-3",
    "title": "Practical 1: Data Visualization",
    "section": "Challenge 3",
    "text": "Challenge 3\n\n\n\n\n\n\nChallenge\n\n\n\nHow did the energy class of houses evolve for those built during the 20th and 21st century?\nWhat is the build year of the newest house (woonhuis) with energy class B?\nðŸ’¡ You can limit the plot to the years between x1 and x2 using scale_x_continuous(limits=[x1, x2])"
  },
  {
    "objectID": "1_DataViz.html#challenge-4",
    "href": "1_DataViz.html#challenge-4",
    "title": "Practical 1: Data Visualization",
    "section": "Challenge 4",
    "text": "Challenge 4\n\n\n\n\n\n\nChallenge\n\n\n\nReproduce this plot.\nðŸ’¡ If you want to match the color palette as well, itâ€™s qualitative brewer scale number 2\nðŸ’¡ You can add multi-line strings in Python using triple quotes like this \"\"\"long string which may span multiple lines\"\"\""
  },
  {
    "objectID": "1_DataViz.html#challenge-5",
    "href": "1_DataViz.html#challenge-5",
    "title": "Practical 1: Data Visualization",
    "section": "Challenge 5",
    "text": "Challenge 5\n\n\n\n\n\n\nChallenge\n\n\n\nPlot the retail values of houses by district. Which district has the highest median prices, and which has the lowest? Use coord_flip() if the district names are hard to read."
  },
  {
    "objectID": "1_DataViz.html#challenge-6",
    "href": "1_DataViz.html#challenge-6",
    "title": "Practical 1: Data Visualization",
    "section": "Challenge 6",
    "text": "Challenge 6\n\n\n\n\n\n\nChallenge\n\n\n\nPlot the distribution of retail values for the two house types. Which of the two appears more symmetrical?"
  },
  {
    "objectID": "1_DataViz.html#challenge-7",
    "href": "1_DataViz.html#challenge-7",
    "title": "Practical 1: Data Visualization",
    "section": "Challenge 7",
    "text": "Challenge 7\n\n\n\n\n\n\nChallenge\n\n\n\nPlot house prices against house size for each district in small multiples. Add a blue linear regression line to each subplot. Which district shows the steepest slope, and which the shallowest?"
  },
  {
    "objectID": "1_DataViz.html#challenge-8",
    "href": "1_DataViz.html#challenge-8",
    "title": "Practical 1: Data Visualization",
    "section": "Challenge 8",
    "text": "Challenge 8\n\n\n\n\n\n\nChallenge\n\n\n\nWhat are the approximate coordinates of the train station? In which district do you think it is located? And what might be its zip code? (You can Google to check your guess.)"
  },
  {
    "objectID": "1_DataViz.html#challenge-9",
    "href": "1_DataViz.html#challenge-9",
    "title": "Practical 1: Data Visualization",
    "section": "Challenge 9",
    "text": "Challenge 9\n\n\n\n\n\n\nChallenge\n\n\n\nPlot house prices against living area, coloring the points by property grade."
  },
  {
    "objectID": "1_DataViz.html#challenge-10",
    "href": "1_DataViz.html#challenge-10",
    "title": "Practical 1: Data Visualization",
    "section": "Challenge 10",
    "text": "Challenge 10\n\n\n\n\n\n\nChallenge\n\n\n\nDo newer houses tend to cost more? Do higher-grade houses cost more? Are newer houses generally higher grade?\nðŸ’¡ Use a log scale for house prices to reduce overplotting."
  },
  {
    "objectID": "1_DataViz.html#challenge-11",
    "href": "1_DataViz.html#challenge-11",
    "title": "Practical 1: Data Visualization",
    "section": "Challenge 11",
    "text": "Challenge 11\n\n\n\n\n\n\nChallenge\n\n\n\nVisualize the distribution of price per square foot of living area for each housing condition. Would you say that newer houses tend to be in better condition?"
  },
  {
    "objectID": "1_DataViz.html#challenge-12",
    "href": "1_DataViz.html#challenge-12",
    "title": "Practical 1: Data Visualization",
    "section": "Challenge 12",
    "text": "Challenge 12\n\n\n\n\n\n\nChallenge\n\n\n\nVisualize the distribution of price per square foot of living area for water-facing and non-water-facing properties. Which distribution appears more symmetrical?"
  },
  {
    "objectID": "3_Wrangling_GT.html",
    "href": "3_Wrangling_GT.html",
    "title": "Practical 3: Data Wrangling + Great Tables",
    "section": "",
    "text": "This is the tutorial for the first practical on Data Visualization with Plotnine\n\n1 + 1\n\n2\n\n\n\n\nCode\nimport polars as pl\nfrom plotnine import *\nfrom gapminder import gapminder\n\n\nC:\\Projects\\Teaching\\LUDataLiteracy\\.venv\\Lib\\site-packages\\gapminder\\data.py:1: UserWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html. The pkg_resources package is slated for removal as early as 2025-11-30. Refrain from using this package or pin to Setuptools&lt;81.\n\n\n\n#gapminder\n\n\n(\nggplot(gapminder)+\ngeom_point(mapping=aes(x='gdpPercap', y='lifeExp', color='continent'))\n)"
  },
  {
    "objectID": "5_Pivots_GT.html",
    "href": "5_Pivots_GT.html",
    "title": "Practical 5: Pivots + Great Tables",
    "section": "",
    "text": "This is the tutorial for the first practical on Data Visualization with Plotnine\n\n1 + 1\n\n2\n\n\n\n\nCode\nimport polars as pl\nfrom plotnine import *\nfrom gapminder import gapminder\n\n\nC:\\Projects\\Teaching\\LUDataLiteracy\\.venv\\Lib\\site-packages\\gapminder\\data.py:1: UserWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html. The pkg_resources package is slated for removal as early as 2025-11-30. Refrain from using this package or pin to Setuptools&lt;81.\n\n\n\n#gapminder\n\n\n(\nggplot(gapminder)+\ngeom_point(mapping=aes(x='gdpPercap', y='lifeExp', color='continent'))\n)"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "KingsCounty.html",
    "href": "KingsCounty.html",
    "title": "Kings County Housing",
    "section": "",
    "text": "The dataset contains the following columns\n\n\n\n\n\n\n\n\nvariable\ndescription\n\n\n\n\nid\nUnique ID for each home sold\n\n\ndate\nDate of the home sale\n\n\nprice\nPrice of each home sold\n\n\nbedrooms\nNumber of bedrooms\n\n\nbathrooms\nNumber of bathrooms\n\n\nsqft_living\nSquare footage of the apartments interior living space\n\n\nsqft_lot\nSquare footage of the land space\n\n\nfloors\nNumber of floors\n\n\nwaterfront\nA dummy variable for whether the apartment was overlooking the waterfront or not\n\n\nview\nAn index from 0 to 4 of how good the view of the property was\n\n\ncondition\nAn index from 1 to 5 on the condition of the apartment\n\n\ngrade\nAn index from 1 to 13 where 1-3 falls short of building construction and design, 7 has an average level of construction and design and 11-13 have a high quality level of construction and design\n\n\nsqft_above\nSquare footage of the interior housing space above ground level\n\n\nsqft_basement\nSquare footage of the interior housing space below ground level\n\n\nyr_built\nYear the house was initially built\n\n\nyr_renovated\nYear of the houseâ€™s last renovation and, if not renovated, the year built\n\n\nzipcode\nZipcode the house belongs to\n\n\nlat\nLatitude\n\n\nlong\nLongitude\n\n\nsqft_living15\nAverage square footage of the apartments interior living space for the nearest 15 neighbors\n\n\nsqft_lot15\nAverage square footage of the land space for the nearest 15 neighbors\n\n\ndistrict\nSchool district name"
  }
]