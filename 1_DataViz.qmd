---
title: "Practical 1: Data Visualization"
from: markdown+emoji
---

This is the tutorial for the first practical on **Data Visualization with Plotnine**

The objective of the tutorial is to give student a chance to practice the data visualization applying the skills learned through the video lessons on a new dataset.

# Utrecht

Answer the following challenges using [Utrecht](Utrecht.qmd) dataset. 


## Preparation

:::{.callout-note}

Before you begin your peer-programming session, please, start the new Jupyter notebook environment in your terminal using the command you learned in Module 1 of the course.

```
uv run jupyter lab
```

Create a new notebook and add a text cell atop your document for this practical session. Add a header `# Data Visualization`. Then add a code cell and place the following code there.

```{python}
import polars as pl
from plotnine import *
```

Then import the datasets for this practical. Add another code cell below (using the key 'B') and paste the following code. This will import two datasets we will be using in the session: Utrecht

```{python}
# TO BE CHANGED LATER
ut = pl.read_csv("data/utrecht_2025.csv")
kc = pl.read_csv('data/kc_house_data.csv')
```

:::

## Challenge 1

::: {.challenge}

Reproduce this plot.

```{python}
#| echo: false
(
ggplot(ut)+
geom_point(mapping=aes(x='house_area', y='retail_value', color='house_type')) +
labs(x='House Area, sqm', y='Retail Price, k€', color='House type') 
)
```

:::

## Challenge 2

:::{.challenge}

Plot the (asked) price of the house against the number of rooms. Use color to indicate number of bathrooms in each house.

```{python}
#| include: false
(
ggplot(ut)+
geom_jitter(mapping=aes(x='rooms', y='asking_price', color='factor(bathrooms)')) +
labs(x='Number of rooms', y='Asking Price, k€', color='Bathrooms') 
)
```

:::

## Challenge 3
:::{.challenge}

How did the energy class of the houses change for the houses built during 20th and 21th century? How old is the newest house (woonhuis) in energy class B?

:bulb: You can limit the plot to the years between `x1` and `x2` using `scale_x_continuous(limits=[x1, x2])`

```{python}
#| include: false
(
ggplot(ut)+
geom_jitter(mapping=aes(x='build_year', y='energy_label', color='house_type')) +
scale_x_continuous(limits=[1900, 2025])+
labs(x='Year Built', y='Energy Class', color='House type') 
)
```

```{python}
#| include: false
(
ggplot(ut)+
geom_jitter(mapping=aes(x='build_year', y='energy_label', color='house_type')) +
scale_x_continuous(limits=[1998, 2025])+
labs(x='Year Built', y='Energy Class', color='House type') 
)
```

:::

## Challenge 4
:::{.challenge}

| Reproduce this plot.
| :bulb: If you want to match the color palette as well, it's qualitative brewer scale number 2
| :bulb: You can add multi-line strings in Python using triple quotes like this `"""long string which may span multiple lines"""`

```{python}
#| echo: false
(
ggplot(ut)+
geom_point(mapping=aes(x='house_area', y='retail_value', color='house_type'))+
geom_smooth(mapping=aes(x='house_area', y='retail_value'),method='lm')+
labs(title='Scatterplot of house area and retail value',
subtitle='Color indicates the type of property',
x='House Area, sqm', y='Retail Price, k€', color='House type',
caption="""A linear regression approximates the positive relation between  
the variables (with error bands shown in gray)""")+
scale_color_brewer('qual', 2)+
theme_bw()
)
```

:::

## Challenge 5
:::{.challenge}


Plot prices by district. Which district has highest median prices and which has the lowest? Flip the coordinates to see the district names more clearly.

```{python}
#| include: false
(
ggplot(ut)+
geom_boxplot(mapping=aes(y='retail_value', x='reorder(district, retail_value)'))+
coord_flip()+
labs(x="", y="Retail value, kEUR")
)
```

:::

## Challenge 6
:::{.challenge}

Plot the distribution of retail values for the two types of houses using both density plot and histogram.

```{python}
#| include: false

# this could be two separate plots, then after_stat() would not be required
(
ggplot(ut,aes(x='retail_value'))+
geom_histogram(aes(fill='house_type', y=after_stat("density")),bins=15,alpha=0.3)+
geom_density(mapping=aes(color='house_type'))+
facet_wrap('house_type', ncol=1)+
labs(x="Retail value, kEUR")
)
```
:::

## Challenge 7
:::{.challenge}

Plot the scatterplot of property prices vs the house size for each district using small multiples. Add a blue linear regression to each subplot. 

```{python}
#| include: false
(
ggplot(ut, aes(y='retail_value', x='house_area'))+
geom_point()+
geom_smooth(method="lm", color="blue")+
labs(y="Retail value, kEUR", x="House Area")+
facet_wrap('district')
)
```

:::

# Kings County

Answer the following challenges using [Kings County](KingsCounty.qmd) dataset. 

## Challenge 8
:::{.challenge}

Plot the house prices vs living area. Color by the property grade.

```{python}
#| include: false
(
ggplot(kc, aes(y='price', x='sqft_living', color='grade'))+
geom_point(alpha=0.3)+
facet_wrap('grade')
)
```

:::

## Challenge 9
:::{.challenge}

Plot the house prices vs living area. Color by the property grade. Do newer houses cost more? Do higher grade houses cost more? Are newer houses higher grade?
:bulb: Put the house price on log scale to avoid overplotting

:::

```{python}
#| include: false
(
ggplot(kc, aes(y='price', x='yr_built', color='grade'))+
geom_point(alpha=0.3)+
scale_y_log10()
)
```